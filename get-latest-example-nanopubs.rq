#+ endpoint: https://query.np.trustyuri.net/repo/last30d

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix np: <http://www.nanopub.org/nschema#>
prefix npa: <http://purl.org/nanopub/admin/>
prefix npx: <http://purl.org/nanopub/x/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix dct: <http://purl.org/dc/terms/>
prefix foaf: <http://xmlns.com/foaf/0.1/>

select ?np ?label ?userid ?username ?date where {
  {select ?np ?label ?userid ?pubkey ?date { graph npa:graph {
    ?np npa:hasValidSignatureForPublicKey ?pubkey .
    ?np dct:created ?date .
    optional { ?np dct:creator ?userid . }
    optional { ?np rdfs:label ?label . }
    filter not exists { ?npx npx:invalidates ?np ; npa:hasValidSignatureForPublicKey ?pubkey . }
    ?np npx:hasNanopubType npx:ExampleNanopub .
    filter not exists { ?np npx:hasNanopubType npx:retracts . }
  } } order by desc(?date) limit 50 }
  optional { service <https://query.np.trustyuri.net/repo/type/77757cabf6184c51c20b8b0fe5dc5e1365b7f628448335184ad54319a0affdfc> {  # (type: http://purl.org/nanopub/x/declaredBy)
    graph npa:graph {
      ?i_np npa:hasValidSignatureForPublicKey ?pubkey ;
        np:hasAssertion ?i_assertion .
      filter not exists { ?i_npx npx:invalidates ?i_np ; npa:hasValidSignatureForPublicKey ?pubkey . }
    }
    graph ?i_assertion {
      ?userid foaf:name ?username .
    }
  } }
}
